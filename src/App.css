body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f0f0f0; /* Light grey background */
    overflow-x: hidden; /* Prevent horizontal scrolling */
}

.App {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content horizontally */
  padding: 15px; /* Reduced padding */
  height: 100vh; /* Use full viewport height */
  box-sizing: border-box; /* Include padding in height calculation */
}

.App h1 {
    color: #333;
    margin-bottom: 10px; /* Reduced from 20px */
}

.controls {
    display: flex;
    gap: 20px; /* Space between forms */
    margin-bottom: 10px; /* Reduced from 20px */
    padding: 15px;
    background-color: #fff; /* White background for controls area */
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    width: 95%;
    max-width: 1400px;
}

.controls form {
    display: flex;
    gap: 10px;
}

.controls input[type="text"] {
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.controls button {
    padding: 8px 15px;
    border: none;
    border-radius: 4px;
    background-color: #007bff;
    color: white;
    cursor: pointer;
    transition: background-color 0.2s;
    font-size: 1em; /* Ensure consistent font size */
}

.controls button:hover {
    background-color: #0056b3;
}

/* Clear All Button Specific Style */
.controls .clear-button {
    background-color: #dc3545; /* Red for destructive action */
}

.controls .clear-button:hover {
    background-color: #c82333;
}

/* Generic Remove Button Style */
.remove-button {
    background-color: transparent;
    border: none;
    color: #dc3545; /* Red color */
    cursor: pointer;
    font-size: 1.2em; /* Make X slightly larger */
    font-weight: bold;
    padding: 0 5px; /* Minimal padding */
    line-height: 1; /* Adjust line height */
    opacity: 0.6;
    transition: opacity 0.2s;
}

.remove-button:hover {
    opacity: 1;
}

.layout-container { /* Renamed from .main-content */
    display: flex;
    width: 95%;
    max-width: 1400px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #e9ecef;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    overflow: hidden; /* Keep this to contain children */
    /* Set a max height relative to viewport for scrolling */
    height: calc(100vh - 200px); /* Adjusted for tab bar (was 150px) */
    min-height: 400px; /* Set minimum height */
    transition: height 0.2s ease; /* Smooth transition when tab bar appears/disappears */
    border-top: none; /* Remove top border */
    border-top-left-radius: 0; /* Remove top-left radius */
    border-top-right-radius: 0; /* Remove top-right radius */
    margin-top: 0; /* Ensure no gap between tab bar and layout */
}

/* Style the palette (defined in ActivityPalette.css) within this container */
.layout-container > .activity-palette {
    flex-shrink: 0; /* Prevent palette from shrinking */
    /* Let the component handle its own height and overflow */
    min-width: 180px;
    border-right: 1px solid #ccc;
}

/* Style the grid container (defined in ScheduleGrid.css) for scrolling */
.layout-container > .schedule-grid-container {
    flex-grow: 1;
    /* Enable both vertical and horizontal scrolling for the grid */
    overflow: auto; 
    padding: 0; /* Remove padding if handled by inner elements */
}

/* Remove the old App-header, App-logo etc. if they are still there */
.App-header, .App-logo, .App-link {
    display: none;
}

/* Style for the tab bar to match the layout container width */
.App .tab-bar {
  width: 95%;
  max-width: 1400px;
  border: 1px solid #ccc;
  border-radius: 5px 5px 0 0;
  margin-bottom: 0; /* Override default margin */
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  background-color: #f8f9fa;
}
